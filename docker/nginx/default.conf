server {
    listen 8000;
    server_name 127.0.0.1;
    index index.php index.html index.htm default.php default.htm default.html;
    root /var/www/html;
    
    error_page 404 /404.html;
    
    location ~ ^/favicon.ico {
        log_not_found off;
        access_log off;
    }
    #PHP-INFO-START  PHP引用配置，可以注释或修改   
    location ~ [^/]\.php(/|$) {
    if (!-f $document_root$fastcgi_script_name) {
        return 404;
    }
    fastcgi_pass vmqfox-backend:9000;
    include fastcgi.conf;
    include fastcgi_params;
    fastcgi_index index.php;
    set $path_info ""; # <--- 在这里添加，初始化变量
    set $real_script_name $fastcgi_script_name;
    if ($fastcgi_script_name ~ "^(.+?\.php)(/.+)$") {
        set $real_script_name $1;
        set $path_info $2;
    }
    fastcgi_param SCRIPT_FILENAME $document_root$real_script_name;
    fastcgi_param SCRIPT_NAME $real_script_name;
    fastcgi_param PATH_INFO $path_info;
}
    #PHP-INFO-END
    
    #REWRITE-START URL重写规则引用,修改后将导致面板设置的伪静态规则失效
    # ThinkPHP 8 纯API服务完整伪静态配置

# 处理OPTIONS预检请求（CORS）
location / {
    if ($request_method = "OPTIONS") {
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, X-Requested-With' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        add_header 'Content-Length' 0;
        add_header 'Content-Type' 'text/plain';
        return 204;
    }
    
    # ThinkPHP 8 路由重写 - 关键配置
    if (!-e $request_filename) {
        rewrite ^(.*)$ /public/index.php?s=$1 last;
    }
}

# API路由专门处理
location ~ ^/api/ {
    if ($request_method = "OPTIONS") {
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, X-Requested-With' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        add_header 'Content-Length' 0;
        add_header 'Content-Type' 'text/plain';
        return 204;
    }
    
    if (!-e $request_filename) {
        rewrite ^(.*)$ /public/index.php?s=$1 last;
    }
}

# 兼容旧版API路由
location ~ ^/(appHeart|appPush|createOrder|checkOrder|getOrder|login|getMenu|admin) {
    if (!-e $request_filename) {
        rewrite ^(.*)$ /public/index.php?s=$1 last;
    }
}

# 健康检查接口
location = /health {
    access_log off;
    return 200 "healthy\n";
    add_header Content-Type text/plain;
}

# 二维码文件访问
location /qr-code/ {
    alias /www/wwwroot/vmqb/runtime/qrcode/;
    expires 1d;
    add_header Cache-Control "public, immutable";
}

# 上传文件访问
location /uploads/ {
    alias /www/wwwroot/vmqb/public/uploads/;
    expires 1d;
    add_header Cache-Control "public, immutable";
}

# 静态资源缓存
location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
    expires 30d;
    add_header Cache-Control "public, immutable";
    access_log off;
}

# 禁止访问敏感文件
location ~ ^/(\.env|\.git|composer\.|\.htaccess|README\.md|\.user\.ini)$ {
    deny all;
    return 404;
}

# 禁止访问敏感目录
location ~ ^/(app|config|vendor|runtime|route)/ {
    deny all;
    return 404;
}

# 禁止访问备份和临时文件
location ~ \.(sql|bak|backup|log)$ {
    deny all;
    return 404;
}
    #REWRITE-END

    #IP-RESTRICT-START 限制访问ip的配置，IP黑白名单
    
    
    #IP-RESTRICT-END

    #BASICAUTH START
    
    #BASICAUTH END

    #SUB_FILTER START
    
    #SUB_FILTER END

    #GZIP START
    
    #GZIP END

    #GLOBAL-CACHE START
    
    #GLOBAL-CACHE END

    #WEBSOCKET-SUPPORT START
    proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection $connection_upgrade;
    #WEBSOCKET-SUPPORT END

    #PROXY-CONF-START
    
    #PROXY-CONF-END

    #SERVER-BLOCK START
    
    #SERVER-BLOCK END

    #禁止访问的文件或目录
    location ~ ^/(\.user.ini|\.htaccess|\.git|\.env|\.svn|\.project|LICENSE|README.md)
    {
        return 404;
    }

    #一键申请SSL证书验证目录相关设置
    location /.well-known{
        allow all;
    }

    #禁止在证书验证目录放入敏感文件
    if ( $uri ~ "^/\.well-known/.*\.(php|jsp|py|js|css|lua|ts|go|zip|tar\.gz|rar|7z|sql|bak)$" ) {
        return 403;
    }
}